{
  "Class Selector": {
    "prefix": "cl",
    "body": [
      ".$1 {",
      "  $2",
      "}"
    ],
    "description": "Class selector"
  },
  "ID Selector": {
    "prefix": "id",
    "body": [
      "#$1 {",
      "  $2",
      "}"
    ],
    "description": "ID selector"
  },
  "And Selector": {
    "prefix": "and",
    "body": [
      "&$1 {",
      "  $2",
      "}"
    ],
    "description": "And selector"
  },
  "Lighten": {
    "prefix": "lig",
    "body": "lighten($$1, $2%)",
    "description": "Lighten color function"
  },
  "Darken": {
    "prefix": "dar",
    "body": "darken($$1, $2%)",
    "description": "Darken color function"
  },
  "RGBA": {
    "prefix": "rgba",
    "body": "rgba($$1, 0.$2)",
    "description": "RGBA color function"
  },
  "Calc Function": {
    "prefix": "calc",
    "body": "calc($1)",
    "description": "Calc"
  },
  "Placeholder": {
    "prefix": "ph",
    "body": "// placeholder",
    "description": "Placeholder comment"
  },
  "Flex Base": {
    "prefix": "flx",
    "body": [
      "@extend %content-center;",
      "@extend %flex;",
      "@extend %items-center;"
    ],
    "description": "Flex base extends"
  },
  "Font-Face": {
    "prefix": "ff",
    "body": [
      "@font-face {",
      "  font-display: swap;",
      "  font-family: '$1';",
      "  font-weight: $2;",
      "  font-style: $3;",
      "  src: local($4),",
      "       local($5),",
      "       url(\"type/$6.woff2\") format(\"woff2\"),",
      "       url(\"type/$7.woff\") format(\"woff\");",
      "}"
    ],
    "description": "Font-Face"
  },
  "Critical Font Loading": {
    "prefix": "cfl",
    "body": [
      "body {",
      "  font-family: sans-serif;",
      "}",
      ".fonts-loaded-1 body {",
      "  font-family: '$1';",
      "}",
      ".fonts-loaded-2 body {",
      "  font-family: '$2';",
      "}"
    ],
    "description": "Crital Font Loading body classes"
  },
  "Reset": {
    "prefix": "res",
    "body": [
      "*,",
      "*::before,",
      "*::after {",
      "  box-sizing: inherit;",
      "}",
      "html {",
      "  box-sizing: border-box;",
      "  -webkit-overflow-scrolling: touch;",
      "}",
      "body {",
      "  height: 100%;",
      "  overflow-y: auto;",
      "  overflow-x: hidden;",
      "  padding: 0 10px;",
      "}"
    ],
    "description": "Basic reset for new site"
  },
  "Reset iOS Noteched": {
    "prefix": "resin",
    "body": [
      "*,",
      "*::before,",
      "*::after {",
      "  box-sizing: inherit;",
      "}",
      "html {",
      "  box-sizing: border-box;",
      "  -webkit-overflow-scrolling: touch;",
      "}",
      "body {",
      "  height: 100%;",
      "  overflow-y: auto;",
      "  overflow-x: hidden;",
      "  padding: 0 10px;",
      "  padding-left: constant(safe-area-inset-left);",
      "  padding-right: constant(safe-area-inset-right);",
      "  padding-left: env(safe-area-inset-left);",
      "  padding-right: env(safe-area-inset-right);",
      "}"
    ],
    "description": "Basic reset for new site and iOS notched"
  },
  "Supports": {
    "prefix": "sup",
    "body": [
      "@supports ($1) {",
      "  $2",
      "}"
    ],
    "description": "Run this code if this is supported (modern browsers)"
  },
  "Supports Grid": {
    "prefix": "supg",
    "body": ["@supports (display:grid) {", "  $1", "}"],
    "description": "Run this code if grid is supported (modern browsers)"
  },
  "Supports Grid Stated": {
    "prefix": "supgg",
    "body": ["@supports (display:grid) {", " display: grid !important;", "}"],
    "description": "Display grid if grid is supported (modern browsers)"
  },
  "Media Query Max Mixin": {
    "prefix": "mqmx",
    "body": ["@mixin media-query-max($device) {", " @media screen and (max-width: $device) {", "   @content;", " }", "}"],
    "description": "Media query mixin call"
  },
  "Media Query Min Mixin": {
    "prefix": "mqmn",
    "body": ["@mixin media-query-min($device) {", " @media screen and (min-width: $device) {", "   @content;", " }", "}"],
    "description": "Media query mixin call"
  },
  "Media Query Max Call": {
    "prefix": "mqmxc",
    "body": ["@include media-query-max($1) {", "  $2", "}"],
    "description": "Media query mixin call"
  },
  "Media Query Min Call": {
    "prefix": "mqmnc",
    "body": ["@include media-query-min($1) {", "  $2", "}"],
    "description": "Media query mixin call"
  },
  "Media Query": {
    "prefix": "mq",
    "body": [
      "@media screen and ($1-width: $2) {",
      "  $3",
      "}"
    ],
    "description": "Media query"
  },
  "Each Loop Map": {
    "prefix": "elm",
    "body": [
      "$$1: (",
      "  $2",
      "  $3",
      ");"
    ],
    "description": "Each loop variable map"
  },
  "Each Loop Dictionary": {
    "prefix": "eld",
    "body": [
      "$$1: (",
      "  $2: $3,",
      "  $4: $5,",
      ");"
    ],
    "description": "Each loop variable dictionary"
  },
  "Each Loop Map Call": {
    "prefix": "elmc",
    "body": [
      "@each $$item in $$1 {",
      "  $$item {",
      "    $2",
      "  }",
      "}" 
    ],
    "description": "Each loop map call"
  },
  "Each Loop Map + index Call": {
    "prefix": "elmic",
    "body": [
      "@each $$item in $$2 {",
      "  $$i: index($$3, $$item);",
      "  $$item:nth-child(#{$$i}) {",
      "    $4",
      "  }",
      "}" 
    ],
    "description": "Each loop map + index call"
  },
  "Each Loop Dictionary Call": {
    "prefix": "eldc",
    "body": [
      "@each $$1, $$item in $$2 {",
      "  $$3 {",
      "    $4: $$item;",
      "  }",
      "}" 
    ],
    "description": "Each loop dictionary call"
  },
  "Each Loop Dictionary + index Call": {
    "prefix": "eldic",
    "body": [
      "@each $$1, $$item in $$2 {",
      "  $$i: index($$3, $$item);",
      "  $$4:nth-child(#{$$i}) {",
      "    $5: $$item;",
      "  }",
      "}" 
    ],
    "description": "Each loop dictionary + index call"
  },
  "For Loop": {
    "prefix": "for",
    "body": ["@for $$i from $1 to $2 {", "  $3", "}"],
    "description": "For loop"
  },
  "For Loop Index": {
    "prefix": "fori",
    "body": [
      "@for $$i from $1 to $2 {",
      "  $c : $3 + ($i - 1) * $4;",
      "  $5.$6#{$i} {",
      "    $7: #{$c}$8;",
      "  }",
      "}"
    ],
    "description": "For loop + add"
  },
  "For Loop nth-child": {
    "prefix": "fornth",
    "body": ["@for $$i from $1 to $2 {", "  li:nth-child(#{$$i}) {", "    $3", "  }", "}"],
    "description": "For loop through nth-child"
  },
  "For Loop MS Grid Column": {
    "prefix": "formsgc",
    "body": ["@for $$i from $1 to $2 {", " li:nth-child(#{$$i}) {", "   -ms-grid-column: #{$$i};", " }", "}"],
    "description": "For loop through nth-child and MS Grid Column"
  },
  "For Loop MS Grid Row": {
    "prefix": "formsgr",
    "body": ["@for $$i from $1 to $2 {", " li:nth-child(#{$$i}) {", "   -ms-grid-row: #{$$i};", " }", "}"],
    "description": "For loop through nth-child and MS Grid Row"
  },
  "Extend" : {
    "prefix": "ext",
    "body": "@extend %$1;",
    "description": "Extend code"
  },
  "Include" : {
    "prefix": "inc",
    "body": "@include $1($2);",
    "description": "Include code"
  },
  "Font Size" : {
    "prefix": "fsz",
    "body": "font-size: $1px;",
    "description": "Font size"
  },
  "Theme Map": {
    "prefix": "thm",
    "body": [
      "$$themes: (",
      "  light: (",
      "    $1: $2,",
      "  ),",
      "  dark: (",
      "    $3: $4,",
      "  ),",
    ");"
    ],
    "description": "Theme color map"
  },
  "Theme Mixin and Function": {
    "prefix": "thmf",
    "body": [
      "@mixin color($property, $varName) {",
      "  #{$property}: map-get($light, $varName);",
      "  #{$property}: var(--#{$varName}, map-get($light, $varName));",
      "}"
    ],
    "description": "Theme mixin and function"
  },
  "Theme Include Call": {
    "prefix": "thc",
    "body": "@include color($1, $2);",
    "description": "Theme call (property:value)"
  },
  "And hover": {
    "prefix": "hov",
    "body": [
      "&:hover {",
      "  $1",
      "}"
    ],
    "description": "And hover"
  }
}